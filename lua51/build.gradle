buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.badlogicgames.gdx:gdx-jnigen-gradle:2.3.1'
    }
}

plugins {
    id 'java'
    id 'java-library'
}

repositories {
    mavenCentral()
}

group = rootProject.group
version = rootProject.version

configurations {
    desktopNatives {
        canBeConsumed = true
        canBeResolved = false
    }

    instrumentedJars {
        canBeConsumed = true
        canBeResolved = false
        extendsFrom api, implementation, runtimeOnly
    }
}

dependencies {
    api project(':luajava')
    implementation 'com.badlogicgames.gdx:gdx-jnigen-loader:2.3.1'
}

apply plugin: 'com.badlogicgames.gdx.gdx-jnigen'

jnigen {
    sharedLibName = 'lua51'

    all {
        headerDirs = ['../../jni/luajava', 'lua51/src', 'lua51/etc', 'mod']
        cppExcludes = ['lua51/**/*']
        cExcludes = ['lua51/**/*']
        libraries = ' -lm '
    }

    add(Windows, x32)
    add(Windows, x64)
    add(Linux, x32) {
        cFlags += ' -D_FORTIFY_SOURCE=0 '
        cppFlags += ' -D_FORTIFY_SOURCE=0 '
    }
    add(Linux, x64) {
        cFlags += ' -D_FORTIFY_SOURCE=0 '
        cppFlags += ' -D_FORTIFY_SOURCE=0 '
    }
    add(Linux, x32, ARM) {
        cFlags += ' -D_FORTIFY_SOURCE=0 '
        cppFlags += ' -D_FORTIFY_SOURCE=0 '
    }
    add(Linux, x64, ARM) {
        cFlags += ' -D_FORTIFY_SOURCE=0 '
        cppFlags += ' -D_FORTIFY_SOURCE=0 '
    }
    add(MacOsX, x64) {
        libraries = ''
    }
    add(MacOsX, x64, ARM) {
        libraries = ''
    }
    add(Android) {
        cFlags += ' -D_FORTIFY_SOURCE=1 '
        cppFlags += ' -D_FORTIFY_SOURCE=1 '
        androidApplicationMk = [
                'APP_PLATFORM := android-19',
                'APP_STL := c++_static',
                'APP_CFLAG := -D_FORTIFY_SOURCE=1 ',
        ]
    }
    add(IOS) {
        libraries = ''
    }
}

artifacts {
    instrumentedJars(jar)
    desktopNatives(jnigenJarNativesDesktop)
}

tasks.named('jar') {
    manifest {
        attributes('Automatic-Module-Name': 'party.iroiro.luajava.lua51')
    }
}

tasks.jnigen.dependsOn(tasks.build)
